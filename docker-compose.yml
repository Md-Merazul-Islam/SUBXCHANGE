version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: django_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - django_net
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: django_redis
    networks:
      - django_net
    restart: unless-stopped


  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_web
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 180"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - django_net
    restart: unless-stopped

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_celery
    command: celery -A config worker --loglevel=info
    env_file:
      - .env
    depends_on:
      - web
      - redis
    networks:
      - django_net
    restart: unless-stopped

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_celery_beat
    command: celery -A config beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file:
      - .env
    depends_on:
      - redis
      - web
    networks:
      - django_net
    restart: unless-stopped

volumes:
  postgres_data:
  static_volume:

networks:
  django_net:
    driver: bridge
